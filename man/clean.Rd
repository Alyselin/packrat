% Generated by roxygen2 (4.0.1.99): do not edit by hand
\name{clean}
\alias{clean}
\title{Remove unused packages}
\usage{
clean(..., project = NULL, lib.loc = libDir(project), force = FALSE)
}
\arguments{
\item{...}{A set of package names to remove from the project. If missing,
we instead return a set of package records, outlining packages eligible for
removal.}

\item{project}{The project directory. Defaults to current working
directory.}

\item{lib.loc}{The library to clean. Defaults to the private package library
associated with the project directory.}

\item{force}{Force package removal, even if they are used within the project?}
}
\description{
Remove unused packages from the given library.
}
\details{
Detects and removes orphaned packages. Orphaned packages are those that meet
the following criteria:
\itemize{
  \item Installed in the library
  \item Not directly used by any \R code in the project
  \item Not a dependency of any non-orphaned package
}
If \code{clean} wants to remove a package but your project actually needs the
package, add a statement such as \code{\link{require}(package-name)} to any
\code{.R} file in your project's directory.
}

