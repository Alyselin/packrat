\name{restore}
\alias{restore}
\title{Apply the most recent snapshot to the library}
\usage{
  restore(appDir = ".")
}
\arguments{
  \item{appDir}{The directory that contains the packrat project.}

}
\description{
Applies the most recent snapshot to the project's private library. 
}
\details{
\code{restore} works by adding, removing, and changing packages so that the set
of installed packages and their versions matches the snapshot exactly. 

There are three common use cases for \code{restore}: 
\itemize{
  \item \emph{Hydrate}: Use \code{restore} after copying a project to a new
  machine to populate the library on that machine. 
  \item \emph{Sync}: Use \code{restore} to apply library changes made by a
  collaborator to your own library. (In general, you want to run \code{restore}
  whenever you pick up a change to \code{packrat.lock}) 
  \item \emph{Rollback}: Use \code{restore} to undo accidental changes made to
  the library since the last snapshot.
}
}
\note{
\code{restore} can be destructive; it will remove packages that were not in the
snapshot, and it will replace newer packages with older versions if that's what
the snapshot indicates. \code{restore} will warn you before attempting to
remove or downgrade a package, but will perform upgrades and new installations
without prompting. 

\code{restore} works only on the private package library created by packrat; if
you have other libraries on your path, they will be unaffected.
}

