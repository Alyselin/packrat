% Generated by roxygen2 (4.0.1.99): do not edit by hand
\name{bootstrap}
\alias{bootstrap}
\title{Initialize Packrat on a new or existing \R project}
\usage{
bootstrap(projDir = ".", source.packages = character())
}
\arguments{
\item{projDir}{The directory that contains the \R project.}

\item{source.packages}{List of paths to unpacked \R package source
  directories.  Use this argument only if your project depends on packages
  that are not available on CRAN or GitHub.}
}
\description{
Given a project directory, makes a new packrat project in the directory.
}
\details{
\code{bootstrap} works as follows:

\enumerate{

\item Application dependencies
are computed by examining the \R code as described in
\code{\link{appDependencies}}.

\item A snapshot is taken of the version of each package currently used by
the project as described in \code{\link{snapshot}}, and each package's
sources are downloaded.

\item A private library is created in the directory.

\item The snapshot is applied to the directory as described in
\code{\link{restore}}. } When \code{bootstrap} is finished, all the packages
on which the project depends are installed in a new, private library located
inside the project directory.

\strong{You must restart your \R session in the given project directory after
running \code{bootstrap} in order for the changes to take effect!}

When \R is started in the directory, it will use the new, private library.
Calls to \code{\link{require}} and \code{\link{library}} will load packages
from the private library (except for 'base' or 'recommended' \R packages,
which are found in the system library), and functions such as \code{\link{install.packages}}
will modify that private library. You can sync this private library with
packrat using \code{\link{snapshot}} and \code{\link{restore}}.
}
\seealso{
\link{packrat} for a description of the files created by
  \code{bootstrap}.
}

